$version Generated by VerilatedVcd $end
$date Tue Aug 27 15:29:46 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 :" i_clk $end
  $var wire  1 ;" i_rstn $end
  $var wire 32 5" o_alu_result_m [31:0] $end
  $var wire  4 7" o_ctrl_mem_byte_sel_m [3:0] $end
  $var wire 32 3" o_instr_d [31:0] $end
  $var wire 32 9" o_mem_read_data [31:0] $end
  $var wire  1 6" o_mem_write_m $end
  $var wire 32 4" o_pc_d [31:0] $end
  $var wire 32 8" o_write_data_m [31:0] $end
  $scope module riscv_top $end
   $var wire 32 Q" REGISTER_INIT [31:0] $end
   $var wire  1 :" i_clk $end
   $var wire  1 ;" i_rstn $end
   $var wire  4 h o_alu_ctrl_e [3:0] $end
   $var wire 32 S! o_alu_data [31:0] $end
   $var wire  1 u o_alu_jalr_e $end
   $var wire 32 5" o_alu_result_m [31:0] $end
   $var wire 32 ~ o_alu_result_w [31:0] $end
   $var wire  1 i o_alu_src_e_a $end
   $var wire  1 j o_alu_src_e_b $end
   $var wire  1 g o_branch_e $end
   $var wire  4 t o_ctrl_mem_byte_sel_e [3:0] $end
   $var wire  4 7" o_ctrl_mem_byte_sel_m [3:0] $end
   $var wire 32 p o_ext_imm_e [31:0] $end
   $var wire 32 x o_ext_imm_m [31:0] $end
   $var wire 32 | o_ext_imm_w [31:0] $end
   $var wire  1 R! o_flush_d $end
   $var wire  1 Z! o_flush_e $end
   $var wire  2 ]! o_forward_ae [1:0] $end
   $var wire  2 ^! o_forward_be [1:0] $end
   $var wire  3 s o_funct3_e [2:0] $end
   $var wire  3 y o_funct3_m [2:0] $end
   $var wire 32 3" o_instr_d [31:0] $end
   $var wire  1 f o_jump_e $end
   $var wire 32 9" o_mem_read_data [31:0] $end
   $var wire  1 U! o_mem_write_e $end
   $var wire  1 6" o_mem_write_m $end
   $var wire 32 4" o_pc_d [31:0] $end
   $var wire 32 m o_pc_e [31:0] $end
   $var wire 32 c o_pc_plus_4d [31:0] $end
   $var wire 32 q o_pc_plus_4e [31:0] $end
   $var wire 32 w o_pc_plus_4m [31:0] $end
   $var wire 32 { o_pc_plus_4w [31:0] $end
   $var wire  2 P! o_pc_src_e [1:0] $end
   $var wire 32 d o_pc_target_e [31:0] $end
   $var wire 32 k o_rd_1e [31:0] $end
   $var wire 32 l o_rd_2e [31:0] $end
   $var wire  5 V! o_rd_e [4:0] $end
   $var wire  5 \! o_rd_m [4:0] $end
   $var wire  5 X! o_rd_w [4:0] $end
   $var wire 32 } o_read_data_w [31:0] $end
   $var wire  1 T! o_reg_write_e $end
   $var wire  1 [! o_reg_write_m $end
   $var wire  1 Y! o_reg_write_w $end
   $var wire  2 e o_result_src_e [1:0] $end
   $var wire  2 v o_result_src_m [1:0] $end
   $var wire  2 z o_result_src_w [1:0] $end
   $var wire 32 W! o_result_w [31:0] $end
   $var wire  5 n o_rs_1e [4:0] $end
   $var wire  5 o o_rs_2e [4:0] $end
   $var wire  1 Q! o_stall_d $end
   $var wire  1 Q! o_stall_f $end
   $var wire 32 8" o_write_data_m [31:0] $end
   $var wire  1 r o_zero_condition_e $end
   $var wire  1 <" o_zero_e $end
   $scope module u_riscv_decode $end
    $var wire  1 :" i_clk $end
    $var wire  1 Z! i_flush_e $end
    $var wire 32 3" i_instr_d [31:0] $end
    $var wire 32 4" i_pc_d [31:0] $end
    $var wire 32 c i_pc_plus_4d [31:0] $end
    $var wire  5 X! i_rd_w [4:0] $end
    $var wire  1 Y! i_reg_write_w $end
    $var wire 32 W! i_result_w [31:0] $end
    $var wire  1 ;" i_rstn $end
    $var wire  4 k! o_alu_ctrl_d [3:0] $end
    $var wire  4 h o_alu_ctrl_e [3:0] $end
    $var wire  1 C" o_alu_jalr_d $end
    $var wire  1 u o_alu_jalr_e $end
    $var wire  1 =" o_alu_src_d_a $end
    $var wire  1 j! o_alu_src_d_b $end
    $var wire  1 i o_alu_src_e_a $end
    $var wire  1 j o_alu_src_e_b $end
    $var wire  1 F" o_branch_d $end
    $var wire  1 g o_branch_e $end
    $var wire  4 B" o_ctrl_mem_byte_sel_d [3:0] $end
    $var wire  4 t o_ctrl_mem_byte_sel_e [3:0] $end
    $var wire 32 l! o_ext_imm_d [31:0] $end
    $var wire 32 p o_ext_imm_e [31:0] $end
    $var wire  3 s o_funct3_e [2:0] $end
    $var wire  3 h! o_imm_src_d [2:0] $end
    $var wire  1 E" o_jump_d $end
    $var wire  1 f o_jump_e $end
    $var wire  1 ?" o_mem_write_d $end
    $var wire  1 U! o_mem_write_e $end
    $var wire 32 m o_pc_e [31:0] $end
    $var wire 32 q o_pc_plus_4e [31:0] $end
    $var wire 32 @" o_rd_1_data [31:0] $end
    $var wire 32 k o_rd_1e [31:0] $end
    $var wire 32 A" o_rd_2_data [31:0] $end
    $var wire 32 l o_rd_2e [31:0] $end
    $var wire  5 V! o_rd_e [4:0] $end
    $var wire  1 >" o_reg_write_d $end
    $var wire  1 T! o_reg_write_e $end
    $var wire  2 i! o_result_src_d [1:0] $end
    $var wire  2 e o_result_src_e [1:0] $end
    $var wire  5 n o_rs_1e [4:0] $end
    $var wire  5 o o_rs_2e [4:0] $end
    $var wire  1 D" o_zero_condition_d $end
    $var wire  1 r o_zero_condition_e $end
    $scope module u_riscv_ctrl_i $end
     $var wire 256 m! DEBUG_INSTR [255:0] $end
     $var wire  3 H" i_ctrl_funct3 [2:0] $end
     $var wire  1 I" i_ctrl_funct7_5b $end
     $var wire  7 G" i_ctrl_opcode [6:0] $end
     $var wire  1 F" o_branch_d $end
     $var wire  4 k! o_ctrl_alu_ctrl [3:0] $end
     $var wire  4 B" o_ctrl_mem_byte_sel [3:0] $end
     $var wire  1 ?" o_ctrl_mem_wr_en $end
     $var wire  1 >" o_ctrl_reg_wr_en $end
     $var wire  1 =" o_ctrl_src_alu_a $end
     $var wire  1 j! o_ctrl_src_alu_b $end
     $var wire  3 h! o_ctrl_src_imm [2:0] $end
     $var wire  2 i! o_ctrl_src_rd [1:0] $end
     $var wire  1 C" o_jalr_d $end
     $var wire  1 E" o_jump_d $end
     $var wire  1 D" o_zero_condition $end
    $upscope $end
    $scope module u_riscv_immext $end
     $var wire 32 3" i_imm_instr [31:0] $end
     $var wire  3 h! i_imm_src [2:0] $end
     $var wire 32 l! o_imm_ext [31:0] $end
    $upscope $end
    $scope module u_riscv_regfile $end
     $var wire  1 :" i_clk $end
     $var wire  5 X! i_regfile_rd_addr [4:0] $end
     $var wire 32 W! i_regfile_rd_data [31:0] $end
     $var wire  1 Y! i_regfile_rd_wen $end
     $var wire  5 J" i_regfile_rs1_addr [4:0] $end
     $var wire  5 K" i_regfile_rs2_addr [4:0] $end
     $var wire 32 @" o_regfile_rs1_data [31:0] $end
     $var wire 32 A" o_regfile_rs2_data [31:0] $end
     $var wire 32 0! registers(0) [31:0] $end
     $var wire 32 1! registers(1) [31:0] $end
     $var wire 32 :! registers(10) [31:0] $end
     $var wire 32 ;! registers(11) [31:0] $end
     $var wire 32 <! registers(12) [31:0] $end
     $var wire 32 =! registers(13) [31:0] $end
     $var wire 32 >! registers(14) [31:0] $end
     $var wire 32 ?! registers(15) [31:0] $end
     $var wire 32 @! registers(16) [31:0] $end
     $var wire 32 A! registers(17) [31:0] $end
     $var wire 32 B! registers(18) [31:0] $end
     $var wire 32 C! registers(19) [31:0] $end
     $var wire 32 2! registers(2) [31:0] $end
     $var wire 32 D! registers(20) [31:0] $end
     $var wire 32 E! registers(21) [31:0] $end
     $var wire 32 F! registers(22) [31:0] $end
     $var wire 32 G! registers(23) [31:0] $end
     $var wire 32 H! registers(24) [31:0] $end
     $var wire 32 I! registers(25) [31:0] $end
     $var wire 32 J! registers(26) [31:0] $end
     $var wire 32 K! registers(27) [31:0] $end
     $var wire 32 L! registers(28) [31:0] $end
     $var wire 32 M! registers(29) [31:0] $end
     $var wire 32 3! registers(3) [31:0] $end
     $var wire 32 N! registers(30) [31:0] $end
     $var wire 32 O! registers(31) [31:0] $end
     $var wire 32 4! registers(4) [31:0] $end
     $var wire 32 5! registers(5) [31:0] $end
     $var wire 32 6! registers(6) [31:0] $end
     $var wire 32 7! registers(7) [31:0] $end
     $var wire 32 8! registers(8) [31:0] $end
     $var wire 32 9! registers(9) [31:0] $end
    $upscope $end
    $scope module u_riscv_register_decode $end
     $var wire 32 Q" REGISTER_INIT [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire  1 Z! i_clr $end
     $var wire  1 >" i_register_d_0 $end
     $var wire  2 i! i_register_d_1 [1:0] $end
     $var wire  5 J" i_register_d_10 [4:0] $end
     $var wire  5 K" i_register_d_11 [4:0] $end
     $var wire  5 L" i_register_d_12 [4:0] $end
     $var wire 32 l! i_register_d_13 [31:0] $end
     $var wire 32 c i_register_d_14 [31:0] $end
     $var wire  1 j! i_register_d_15 $end
     $var wire  1 D" i_register_d_16 $end
     $var wire  1 C" i_register_d_17 $end
     $var wire  4 B" i_register_d_18 [3:0] $end
     $var wire  3 H" i_register_d_19 [2:0] $end
     $var wire  1 ?" i_register_d_2 $end
     $var wire  1 E" i_register_d_3 $end
     $var wire  1 F" i_register_d_4 $end
     $var wire  4 k! i_register_d_5 [3:0] $end
     $var wire  1 =" i_register_d_6 $end
     $var wire 32 @" i_register_d_7 [31:0] $end
     $var wire 32 A" i_register_d_8 [31:0] $end
     $var wire 32 4" i_register_d_9 [31:0] $end
     $var wire  1 ;" i_rstn $end
     $var wire  1 T! o_register_q_0 $end
     $var wire  2 e o_register_q_1 [1:0] $end
     $var wire  5 n o_register_q_10 [4:0] $end
     $var wire  5 o o_register_q_11 [4:0] $end
     $var wire  5 V! o_register_q_12 [4:0] $end
     $var wire 32 p o_register_q_13 [31:0] $end
     $var wire 32 q o_register_q_14 [31:0] $end
     $var wire  1 j o_register_q_15 $end
     $var wire  1 r o_register_q_16 $end
     $var wire  1 u o_register_q_17 $end
     $var wire  4 t o_register_q_18 [3:0] $end
     $var wire  3 s o_register_q_19 [2:0] $end
     $var wire  1 U! o_register_q_2 $end
     $var wire  1 f o_register_q_3 $end
     $var wire  1 g o_register_q_4 $end
     $var wire  4 h o_register_q_5 [3:0] $end
     $var wire  1 i o_register_q_6 $end
     $var wire 32 k o_register_q_7 [31:0] $end
     $var wire 32 l o_register_q_8 [31:0] $end
     $var wire 32 m o_register_q_9 [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_execute $end
    $var wire  4 h i_alu_ctrl_e [3:0] $end
    $var wire  1 i i_alu_src_e_a $end
    $var wire  1 j i_alu_src_e_b $end
    $var wire  1 :" i_clk $end
    $var wire  4 t i_ctrl_mem_byte_sel_e [3:0] $end
    $var wire 32 p i_ext_imm_e [31:0] $end
    $var wire  2 ]! i_forward_ae [1:0] $end
    $var wire  2 ^! i_forward_be [1:0] $end
    $var wire  3 s i_funct3_e [2:0] $end
    $var wire  1 U! i_mem_write_e $end
    $var wire 32 m i_pc_e [31:0] $end
    $var wire 32 q i_pc_plus_4e [31:0] $end
    $var wire 32 k i_rd_1e [31:0] $end
    $var wire 32 l i_rd_2e [31:0] $end
    $var wire  5 V! i_rd_e [4:0] $end
    $var wire  1 T! i_reg_write_e $end
    $var wire  2 e i_result_src_e [1:0] $end
    $var wire 32 W! i_result_w [31:0] $end
    $var wire  1 ;" i_rstn $end
    $var wire  1 r i_zero_condition $end
    $var wire 32 S! o_alu_data [31:0] $end
    $var wire 32 5" o_alu_result_m [31:0] $end
    $var wire  4 7" o_ctrl_mem_byte_sel_m [3:0] $end
    $var wire 32 x o_ext_imm_m [31:0] $end
    $var wire  3 y o_funct3_m [2:0] $end
    $var wire  1 6" o_mem_write_m $end
    $var wire 32 x! o_mux_src_a [31:0] $end
    $var wire 32 w o_pc_plus_4m [31:0] $end
    $var wire 32 d o_pc_target_e [31:0] $end
    $var wire  5 \! o_rd_m [4:0] $end
    $var wire  1 [! o_reg_write_m $end
    $var wire  2 v o_result_src_m [1:0] $end
    $var wire 32 u! o_src_ae [31:0] $end
    $var wire 32 w! o_src_be [31:0] $end
    $var wire 32 v! o_write_data_e [31:0] $end
    $var wire 32 8" o_write_data_m [31:0] $end
    $var wire  1 <" o_zero_e $end
    $scope module u_adder_execute $end
     $var wire 32 m i_adder_a [31:0] $end
     $var wire 32 p i_adder_b [31:0] $end
     $var wire 32 d o_adder_sum [31:0] $end
    $upscope $end
    $scope module u_mux_execute_0 $end
     $var wire 32 T" N_MUX_IN [31:0] $end
     $var wire 96 y! i_mux_concat_data [95:0] $end
     $var wire  2 ]! i_mux_sel [1:0] $end
     $var wire 32 |! mux_input_arr(0) [31:0] $end
     $var wire 32 }! mux_input_arr(1) [31:0] $end
     $var wire 32 ~! mux_input_arr(2) [31:0] $end
     $var wire 32 x! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_mux_execute_2 $end
     $var wire 32 T" N_MUX_IN [31:0] $end
     $var wire 96 %" i_mux_concat_data [95:0] $end
     $var wire  2 ^! i_mux_sel [1:0] $end
     $var wire 32 (" mux_input_arr(0) [31:0] $end
     $var wire 32 )" mux_input_arr(1) [31:0] $end
     $var wire 32 *" mux_input_arr(2) [31:0] $end
     $var wire 32 v! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_alu $end
     $var wire 64 %! DEBUG_ALU_OP [63:0] $end
     $var wire  1 /" alu_zero $end
     $var wire 32 u! i_alu_a [31:0] $end
     $var wire 32 w! i_alu_b [31:0] $end
     $var wire  4 h i_alu_ctrl [3:0] $end
     $var wire  1 r i_zero_condition $end
     $var wire 32 S! o_alu_result [31:0] $end
     $var wire  1 <" o_alu_zero $end
    $upscope $end
    $scope module u_riscv_mux_1 $end
     $var wire 32 U" N_MUX_IN [31:0] $end
     $var wire 64 !" i_mux_concat_data [63:0] $end
     $var wire  1 i i_mux_sel [0:0] $end
     $var wire 32 #" mux_input_arr(0) [31:0] $end
     $var wire 32 $" mux_input_arr(1) [31:0] $end
     $var wire 32 u! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux_3 $end
     $var wire 32 U" N_MUX_IN [31:0] $end
     $var wire 64 +" i_mux_concat_data [63:0] $end
     $var wire  1 j i_mux_sel [0:0] $end
     $var wire 32 -" mux_input_arr(0) [31:0] $end
     $var wire 32 ." mux_input_arr(1) [31:0] $end
     $var wire 32 w! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_register_execute $end
     $var wire 32 Q" REGISTER_INIT [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire  1 T! i_register_d_0 $end
     $var wire  2 e i_register_d_1 [1:0] $end
     $var wire  1 U! i_register_d_2 $end
     $var wire 32 S! i_register_d_3 [31:0] $end
     $var wire 32 v! i_register_d_4 [31:0] $end
     $var wire  5 V! i_register_d_5 [4:0] $end
     $var wire 32 q i_register_d_6 [31:0] $end
     $var wire 32 p i_register_d_7 [31:0] $end
     $var wire  4 t i_register_d_8 [3:0] $end
     $var wire  3 s i_register_d_9 [2:0] $end
     $var wire  1 ;" i_rstn $end
     $var wire  1 [! o_register_q_0 $end
     $var wire  2 v o_register_q_1 [1:0] $end
     $var wire  1 6" o_register_q_2 $end
     $var wire 32 5" o_register_q_3 [31:0] $end
     $var wire 32 8" o_register_q_4 [31:0] $end
     $var wire  5 \! o_register_q_5 [4:0] $end
     $var wire 32 w o_register_q_6 [31:0] $end
     $var wire 32 x o_register_q_7 [31:0] $end
     $var wire  4 7" o_register_q_8 [3:0] $end
     $var wire  3 y o_register_q_9 [2:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_fetch $end
    $var wire 32 S! i_alu_result [31:0] $end
    $var wire  1 :" i_clk $end
    $var wire  1 R! i_flush_d $end
    $var wire  2 P! i_pc_src_e [1:0] $end
    $var wire 32 d i_pc_target_e [31:0] $end
    $var wire 32 !! i_pcf [31:0] $end
    $var wire  1 ;" i_rstn $end
    $var wire  1 Q! i_stall_d $end
    $var wire  1 Q! i_stall_f $end
    $var wire 32 #! o_imem_rd_data [31:0] $end
    $var wire 32 3" o_instr_d [31:0] $end
    $var wire 32 4" o_pc_d [31:0] $end
    $var wire 32 c o_pc_plus_4d [31:0] $end
    $var wire 32 "! o_pc_plus_4f [31:0] $end
    $var wire 32 _! o_pcf_ [31:0] $end
    $scope module u_riscv_adder $end
     $var wire 32 !! i_adder_a [31:0] $end
     $var wire 32 S" i_adder_b [31:0] $end
     $var wire 32 "! o_adder_sum [31:0] $end
    $upscope $end
    $scope module u_riscv_imem $end
     $var wire 1024 # FILE_TEXT_MIF [1023:0] $end
     $var wire 14 $! i_imem_addr [13:0] $end
     $var wire 32 #! o_imem_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux $end
     $var wire 32 R" N_MUX_IN [31:0] $end
     $var wire 128 `! i_mux_concat_data [127:0] $end
     $var wire  2 P! i_mux_sel [1:0] $end
     $var wire 32 d! mux_input_arr(0) [31:0] $end
     $var wire 32 e! mux_input_arr(1) [31:0] $end
     $var wire 32 f! mux_input_arr(2) [31:0] $end
     $var wire 32 g! mux_input_arr(3) [31:0] $end
     $var wire 32 _! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_register $end
     $var wire 32 Q" REGISTER_INIT [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire 32 _! i_register_d [31:0] $end
     $var wire  1 Q! i_register_en $end
     $var wire  1 ;" i_rstn $end
     $var wire 32 !! o_register_q [31:0] $end
    $upscope $end
    $scope module u_risv_register_fetch $end
     $var wire 32 Q" REGISTER_INIT [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire  1 R! i_clr $end
     $var wire 32 #! i_register_d_0 [31:0] $end
     $var wire 32 !! i_register_d_1 [31:0] $end
     $var wire 32 "! i_register_d_2 [31:0] $end
     $var wire  1 Q! i_register_en $end
     $var wire  1 ;" i_rstn $end
     $var wire 32 3" o_register_q_0 [31:0] $end
     $var wire 32 4" o_register_q_1 [31:0] $end
     $var wire 32 c o_register_q_2 [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_hazard $end
    $var wire  1 R! i_pc_src_e $end
    $var wire  5 V! i_rd_e [4:0] $end
    $var wire  5 \! i_rd_m [4:0] $end
    $var wire  5 X! i_rd_w [4:0] $end
    $var wire  1 [! i_reg_write_m $end
    $var wire  1 Y! i_reg_write_w $end
    $var wire  1 /! i_result_src_e $end
    $var wire  5 J" i_rs_1d [4:0] $end
    $var wire  5 n i_rs_1e [4:0] $end
    $var wire  5 K" i_rs_2d [4:0] $end
    $var wire  5 o i_rs_2e [4:0] $end
    $var wire  1 Q! lw_stall $end
    $var wire  1 R! o_flush_d $end
    $var wire  1 Z! o_flush_e $end
    $var wire  2 ]! o_forward_ae [1:0] $end
    $var wire  2 ^! o_forward_be [1:0] $end
    $var wire  1 Q! o_stall_d $end
    $var wire  1 Q! o_stall_f $end
   $upscope $end
   $scope module u_riscv_memory $end
    $var wire 32 5" i_alu_result_m [31:0] $end
    $var wire  1 :" i_clk $end
    $var wire  4 7" i_ctrl_mem_byte_sel_m [3:0] $end
    $var wire 32 x i_ext_imm_m [31:0] $end
    $var wire  3 y i_mem_funct3 [2:0] $end
    $var wire  1 6" i_mem_write_m $end
    $var wire 32 w i_pc_plus_4m [31:0] $end
    $var wire  5 \! i_rd_m [4:0] $end
    $var wire  1 [! i_reg_write_m $end
    $var wire  2 v i_result_src_m [1:0] $end
    $var wire  1 ;" i_rstn $end
    $var wire 32 8" i_write_data_m [31:0] $end
    $var wire 32 ~ o_alu_result_w [31:0] $end
    $var wire 32 5" o_dmem_intf_addr [31:0] $end
    $var wire  4 1" o_dmem_intf_byte_sel [3:0] $end
    $var wire 32 M" o_dmem_intf_rd_data [31:0] $end
    $var wire  1 6" o_dmem_intf_wen $end
    $var wire 32 0" o_dmem_intf_wr_data [31:0] $end
    $var wire 32 N" o_dmem_rd_data [31:0] $end
    $var wire 32 | o_ext_imm_w [31:0] $end
    $var wire 32 9" o_mem_read_data [31:0] $end
    $var wire 32 { o_pc_plus_4w [31:0] $end
    $var wire  5 X! o_rd_w [4:0] $end
    $var wire 32 } o_read_data_w [31:0] $end
    $var wire  1 Y! o_reg_write_w $end
    $var wire  2 z o_result_src_w [1:0] $end
    $scope module u_riscv_dmem $end
     $var wire 1024 C FILE_DATA_MIF [1023:0] $end
     $var wire 32 P" i [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire 14 O" i_dmem_addr [13:0] $end
     $var wire  4 1" i_dmem_byte_sel [3:0] $end
     $var wire 32 0" i_dmem_data [31:0] $end
     $var wire  1 6" i_dmem_wr_en $end
     $var wire 32 N" o_dmem_data [31:0] $end
    $upscope $end
    $scope module u_riscv_dmem_interface $end
     $var wire 32 2" byte_aligned_dmem_rd_data [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire 32 5" i_dmem_intf_addr [31:0] $end
     $var wire  4 7" i_dmem_intf_byte_sel [3:0] $end
     $var wire  3 y i_dmem_intf_func3 [2:0] $end
     $var wire 32 N" i_dmem_intf_rd_data [31:0] $end
     $var wire  1 6" i_dmem_intf_wen $end
     $var wire 32 8" i_dmem_intf_wr_data [31:0] $end
     $var wire 32 5" o_dmem_intf_addr [31:0] $end
     $var wire  4 1" o_dmem_intf_byte_sel [3:0] $end
     $var wire 32 M" o_dmem_intf_rd_data [31:0] $end
     $var wire  1 6" o_dmem_intf_wen $end
     $var wire 32 0" o_dmem_intf_wr_data [31:0] $end
    $upscope $end
    $scope module u_riscv_register_memory $end
     $var wire 32 Q" REGISTER_INIT [31:0] $end
     $var wire  1 :" i_clk $end
     $var wire  1 [! i_register_d_0 $end
     $var wire  2 v i_register_d_1 [1:0] $end
     $var wire 32 5" i_register_d_2 [31:0] $end
     $var wire 32 M" i_register_d_3 [31:0] $end
     $var wire  5 \! i_register_d_4 [4:0] $end
     $var wire 32 w i_register_d_5 [31:0] $end
     $var wire 32 x i_register_d_6 [31:0] $end
     $var wire  1 ;" i_rstn $end
     $var wire  1 Y! o_register_q_0 $end
     $var wire  2 z o_register_q_1 [1:0] $end
     $var wire 32 ~ o_register_q_2 [31:0] $end
     $var wire 32 } o_register_q_3 [31:0] $end
     $var wire  5 X! o_register_q_4 [4:0] $end
     $var wire 32 { o_register_q_5 [31:0] $end
     $var wire 32 | o_register_q_6 [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_writeback $end
    $var wire 32 ~ i_alu_result_w [31:0] $end
    $var wire 32 | i_ext_imm_w [31:0] $end
    $var wire 32 { i_pc_plus_4w [31:0] $end
    $var wire 32 } i_read_data_w [31:0] $end
    $var wire  2 z i_result_src_w [1:0] $end
    $var wire 32 W! o_result_w [31:0] $end
    $scope module u_mux_writeback $end
     $var wire 32 R" N_MUX_IN [31:0] $end
     $var wire 128 '! i_mux_concat_data [127:0] $end
     $var wire  2 z i_mux_sel [1:0] $end
     $var wire 32 +! mux_input_arr(0) [31:0] $end
     $var wire 32 ,! mux_input_arr(1) [31:0] $end
     $var wire 32 -! mux_input_arr(2) [31:0] $end
     $var wire 32 .! mux_input_arr(3) [31:0] $end
     $var wire 32 W! o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111011010000110111101101101011001010010111101110011011110010111001101101111011011100010111101110000011100100110111101101010011001010110001101110100001011110101001001010110001100110011001001001001001011110111010001100101011100110111010001100010011001010110111001100011011010000010111101101101011010010110011000101111011100110110100101101101011100000110110001100101001011100110010001100001011101000110000100101110011011010110100101100110 C
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00 e
0f
0g
b0000 h
0i
0j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000 n
b00000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
0r
b000 s
b0000 t
0u
b00 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b000 y
b00 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000100 "!
b11111111000000000000010100010011 #!
b00000000000000 $!
b0000000000000000000000000000000001000001010001000100010000001001 %!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 '!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
0/!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
b00000000000000000000000000000000 F!
b00000000000000000000000000000000 G!
b00000000000000000000000000000000 H!
b00000000000000000000000000000000 I!
b00000000000000000000000000000000 J!
b00000000000000000000000000000000 K!
b00000000000000000000000000000000 L!
b00000000000000000000000000000000 M!
b00000000000000000000000000000000 N!
b00000000000000000000000000000000 O!
b00 P!
0Q!
0R!
b00000000000000000000000000000000 S!
0T!
0U!
b00000 V!
b00000000000000000000000000000000 W!
b00000 X!
0Y!
0Z!
0[!
b00000 \!
b00 ]!
b00 ^!
b00000000000000000000000000000100 _!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100 `!
b00000000000000000000000000000100 d!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 f!
b00000000000000000000000000000000 g!
b111 h!
b00 i!
0j!
b0000 k!
b00000000000000000000000000000000 l!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 m!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 v!
b00000000000000000000000000000000 w!
b00000000000000000000000000000000 x!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 y!
b00000000000000000000000000000000 |!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 ~!
b0000000000000000000000000000000000000000000000000000000000000000 !"
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 $"
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 %"
b00000000000000000000000000000000 ("
b00000000000000000000000000000000 )"
b00000000000000000000000000000000 *"
b0000000000000000000000000000000000000000000000000000000000000000 +"
b00000000000000000000000000000000 -"
b00000000000000000000000000000000 ."
1/"
b00000000000000000000000000000000 0"
b0000 1"
b00000000000000000000000000000000 2"
b00000000000000000000000000000000 3"
b00000000000000000000000000000000 4"
b00000000000000000000000000000000 5"
06"
b0000 7"
b00000000000000000000000000000000 8"
b00000000000000000000000000000000 9"
1:"
0;"
1<"
0="
1>"
0?"
b00000000000000000000000000000000 @"
b00000000000000000000000000000000 A"
b1111 B"
0C"
0D"
0E"
0F"
b0000000 G"
b000 H"
0I"
b00000 J"
b00000 K"
b00000 L"
b00000000000000000000000000000000 M"
b00000000000000000000000000000000 N"
b00000000000000 O"
b00000000000000000000000000000000 P"
b00000000000000000000000000000000 Q"
b00000000000000000000000000000100 R"
b00000000000000000000000000000100 S"
b00000000000000000000000000000011 T"
b00000000000000000000000000000010 U"
#1
0:"
#2
1:"
#3
0:"
#4
1:"
#5
0:"
#6
1:"
#7
0:"
#8
1:"
#9
0:"
#10
1:"
#11
0:"
1;"
#12
b00000000000000000000000000000100 c
b1111 t
b00000000000000000000000000000100 !!
b00000000000000000000000000001000 "!
b00000000000100000000010110010011 #!
b00000000000001 $!
1T!
b00000000000000000000000000001000 _!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000 `!
b00000000000000000000000000001000 d!
b001 h!
1j!
b11111111111111111111111111110000 l!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100001011001000110010001101001 m!
b11111111000000000000010100010011 3"
1:"
b0010011 G"
1I"
b10000 K"
b01010 L"
#13
0:"
#14
b00000000000000000000000000001000 c
b11111111111111111111111111110000 d
1j
b10000 o
b11111111111111111111111111110000 p
b00000000000000000000000000000100 q
b00000000000000000000000000001000 !!
b00000000000000000000000000001100 "!
b00000000101101010010000000100011 #!
b00000000000010 $!
b11111111111111111111111111110000 S!
b01010 V!
1[!
b00000000000000000000000000001100 _!
b11111111111111111111111111110000000000000000000000000000000000001111111111111111111111111111000000000000000000000000000000001100 `!
b00000000000000000000000000001100 d!
b11111111111111111111111111110000 e!
b11111111111111111111111111110000 g!
b00000000000000000000000000000001 l!
b11111111111111111111111111110000 w!
b1111111111111111111111111111000000000000000000000000000000000000 +"
b11111111111111111111111111110000 ."
0/"
b1111 1"
b00000000000100000000010110010011 3"
b00000000000000000000000000000100 4"
b1111 7"
1:"
0<"
0I"
b00001 K"
b01011 L"
#15
0:"
#16
b00000000000000000000000000001100 c
b00000000000000000000000000000101 d
b00000000000000000000000000000100 m
b00001 o
b00000000000000000000000000000001 p
b00000000000000000000000000001000 q
b00000000000000000000000000000100 w
b11111111111111111111111111110000 x
b00000000000000000000000000001100 !!
b00000000000000000000000000010000 "!
b11111111010111111111000001101111 #!
b00000000000011 $!
b00000000000000000000000000000001 S!
b01011 V!
1Y!
b01010 \!
b00000000000000000000000000010000 _!
b00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000010000 `!
b00000000000000000000000000010000 d!
b00000000000000000000000000000101 e!
b00000000000000000000000000000001 g!
b010 h!
b00000000000000000000000000000000 l!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001101110111 m!
b00000000000000000000000000000001 w!
b111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000 y!
b11111111111111111111111111110000 ~!
b0000000000000000000000000000010000000000000000000000000000000000 !"
b00000000000000000000000000000100 $"
b111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000 %"
b11111111111111111111111111110000 *"
b0000000000000000000000000000000100000000000000000000000000000000 +"
b00000000000000000000000000000001 ."
b00000000101101010010000000100011 3"
b00000000000000000000000000001000 4"
b11111111111111111111111111110000 5"
1:"
0>"
1?"
b0100011 G"
b010 H"
b01010 J"
b01011 K"
b00000 L"
b11111111111100 O"
#17
0:"
#18
b00000000000000000000000000010000 c
b00000000000000000000000000001000 d
b00000000000000000000000000001000 m
b01010 n
b01011 o
b00000000000000000000000000000000 p
b00000000000000000000000000001100 q
b010 s
b00000000000000000000000000001000 w
b00000000000000000000000000000001 x
b00000000000000000000000000000100 {
b11111111111111111111111111110000 |
b11111111111111111111111111110000 ~
b00000000000000000000000000010000 !!
b00000000000000000000000000010100 "!
b00000000000000000000000000000000 #!
b00000000000100 $!
b11111111111111111111111111110000000000000000000000000000000001000000000000000000000000000000000011111111111111111111111111110000 '!
b11111111111111111111111111110000 +!
b00000000000000000000000000000100 -!
b11111111111111111111111111110000 .!
b11111111111111111111111111110000 S!
0T!
1U!
b00000 V!
b11111111111111111111111111110000 W!
b01010 X!
b01011 \!
b01 ]!
b10 ^!
b00000000000000000000000000010100 _!
b11111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010100 `!
b00000000000000000000000000010100 d!
b00000000000000000000000000001000 e!
b11111111111111111111111111110000 g!
b100 h!
b10 i!
b11111111111111111111111111110100 l!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010100110000101101100 m!
b11111111111111111111111111110000 u!
b00000000000000000000000000000001 v!
b00000000000000000000000000000000 w!
b11111111111111111111111111110000 x!
b000000000000000000000000000000011111111111111111111111111111000000000000000000000000000000000000 y!
b11111111111111111111111111110000 }!
b00000000000000000000000000000001 ~!
b0000000000000000000000000000100011111111111111111111111111110000 !"
b11111111111111111111111111110000 #"
b00000000000000000000000000001000 $"
b000000000000000000000000000000011111111111111111111111111111000000000000000000000000000000000000 %"
b11111111111111111111111111110000 )"
b00000000000000000000000000000001 *"
b0000000000000000000000000000000000000000000000000000000000000001 +"
b00000000000000000000000000000001 -"
b00000000000000000000000000000000 ."
b1110 1"
b11111111010111111111000001101111 3"
b00000000000000000000000000001100 4"
b00000000000000000000000000000001 5"
1:"
1>"
0?"
1E"
b1101111 G"
b111 H"
1I"
b11111 J"
b10101 K"
b00000000000000 O"
#19
b11111111111111111111111111110000 :!
0:"
#20
b00000000000000000000000000010100 c
b00000000000000000000000000000000 d
b10 e
1f
b00000000000000000000000000001100 m
b11111 n
b10101 o
b11111111111111111111111111110100 p
b00000000000000000000000000010000 q
b111 s
b00000000000000000000000000001100 w
b00000000000000000000000000000000 x
b010 y
b00000000000000000000000000001000 {
b00000000000000000000000000000001 |
b00000000000000000000000000000001 ~
b00000000000000000000000000010100 !!
b00000000000000000000000000011000 "!
b00000000000101 $!
b00000000000000000000000000000001000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001 '!
b00000000000000000000000000000001 +!
b00000000000000000000000000001000 -!
b00000000000000000000000000000001 .!
b01 P!
1R!
b11111111111111111111111111110100 S!
1T!
0U!
b00000000000000000000000000000001 W!
b01011 X!
1Z!
0[!
b00000 \!
b00 ]!
b00 ^!
b00000000000000000000000000000000 _!
b11111111111111111111111111110100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000 `!
b00000000000000000000000000011000 d!
b00000000000000000000000000000000 e!
b11111111111111111111111111110100 g!
b111 h!
b00 i!
0j!
b00000000000000000000000000000000 l!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 v!
b11111111111111111111111111110100 w!
b00000000000000000000000000000000 x!
b111111111111111111111111111100000000000000000000000000000000000100000000000000000000000000000000 y!
b00000000000000000000000000000001 }!
b11111111111111111111111111110000 ~!
b0000000000000000000000000000110000000000000000000000000000000000 !"
b00000000000000000000000000000000 #"
b00000000000000000000000000001100 $"
b111111111111111111111111111100000000000000000000000000000000000100000000000000000000000000000000 %"
b00000000000000000000000000000001 )"
b11111111111111111111111111110000 *"
b1111111111111111111111111111010000000000000000000000000000000000 +"
b00000000000000000000000000000000 -"
b11111111111111111111111111110100 ."
b00000000000000000000000000000001 0"
b1111 1"
b00000000000000000000000000000000 3"
b00000000000000000000000000010000 4"
b11111111111111111111111111110000 5"
16"
b00000000000000000000000000000001 8"
1:"
0E"
b0000000 G"
b000 H"
0I"
b00000 J"
b00000 K"
b11111111111100 O"
#21
b00000000000000000000000000000001 ;!
0:"
